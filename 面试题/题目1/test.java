/*
问题：
最有效率的方法计算2乘以8？
解释：
a << b就表示把a转为二进制后左移b位（在后面添b个0）。
例如100的二进制为1100100，而110010000转成十进制是400，
那么100 << 2 = 400。可以看出，a << b的值实际上就是a乘以2的b次方，
因为在二进制数后添一个0就相当于该数乘以2。 通常认为a << 1比a * 2更快，
因为前者是更底层一些的操作。因此程序中乘以2的操作请尽量用左移一位来代替。 
定义一些常量可能会用到<<运算。你可以方便地用1 << 16 - 1来表示65535。很多算法和数据结构要求数据规模必须是2的幂，
此时可以用<<来定义Max_N等常量。 和<<相似，a >> b表示二进制右移b位（去掉末b位），相当于a除以2的b次方（取整）。
我们也经常用>> 1来代替div 2，比如二分查找、堆的插入操作等等。想办法用>>代替除法运算可以使程序效率大大提高。
最大公约数的二进制算法用除以2操作来代替慢得出奇的mod运算，效率可以提高60%。

那么，一个数乘以8只要将其左移3位即可，而位运算cpu直接支持的，效率最高。所以，2乘以8等於几的最效率的方法是

*/
public class test
{
    public static void main(String[] args)
    {
        int a = 2<<3;
        System.out.println(a);
    }
}