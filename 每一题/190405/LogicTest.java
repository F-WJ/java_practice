/*
题目(a != 1 && a != 2 && a != 3 && a!=4)
请问a的值为多少时，上面的表达式返回false
A.2
B.4
C.6
D.2，4
E.2，4，6

答案与解析
1.相关知识        
逻辑运算又称为布尔运算，是以数学家布尔来命名的，我们的boolean类型就是使用了相同的名字。
用逻辑运算符将关系表达式或逻辑量连接起来的有意义的式子称为逻辑表达式。逻辑表达式的值是一个逻辑值，即true或false。
“！=”是运算符号，它可以通过判定两个变量是否相等来返回true或者false,相等则为true，不同则为false。
"&&"逻辑操作符”与“，当两个操作数的值都为true时，采取true，只要有一个为false就都为false。多个与同时存在时，只要出现一个false，则后面的都可以不用再判断了。
2.源码分析
分别于1、2、3、4对比看是否与a不等，并且做与操作，得出最终的布尔值。
3.答案解析
由源码分析可以得出，只要a值与1、2、3、4中任意一个数相等，则会返回false，与操作中只要出现一个false则最终结果会返回false，因此a为2、4时都会返回false，因此答案选D。


分析:
result: 2 或者 4 reason: &&代表与，||代表或，！代表非， &代表按位与，|代表按位或，
^代表按位异或，~按位取反（二进制数的与或非异或） 

拓展： 
1、这道题还有个比较重要的知识点就是&&和||是有短路功能的，譬如：false&&a!=2&&a!=1111; 
这条语句就看到第一个false就不会执行接下来的判断了， 
在很多地方的源码都是用到这个知识来提高运行的效率的（把最易于判断的模式放在最前面） 
2、符号中还有一个比较特殊的东西叫做结合性：就当出现多个相同的优先级的运算符的时候，
就需要考虑这个问题了，像&&、||、！、==、+、-、等等都是 左结合性的，（也就是从左算到右）；
右结合性的运算符有： ++ -- = 以及三目运算符 

例题：
int x = 1; int y =1; ++x + y++ - y-- > 0 ? "x="+x : "y="+ y; (试试看输出什么) 2
*/
public class LogicTest
{
    public static void main(String[] args)
    {
        int a = 2;
        System.out.println(a != 1 && a != 2 && a!= 3 && a != 4);  //false

        int x = 1;
        int y = 1;
        System.out.println(++x + y++ - y-- > 0 ? "x="+x : "y="+ y); //x = 2
        System.out.println(++x + y++ - y--); // 2
        System.out.println(++x + y++ - y-- < 0 ? "x="+x : "y="+ y); //y = 1

    }
}
